name: Build-Test-Deploy Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install HTTPie
        run: |
          sudo apt update
          sudo apt install -y httpie

      - name: Build
        id: build
        run: |
          echo "Building..."
          # Simulate a build process
          if [ $((RANDOM % 2)) -eq 0 ]; then
            echo "Build successful!"
            echo "::set-output name=status::success"
            echo "Current Stage: Build"
            echo "Build Outcome Timestamp: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
            echo "::set-output name=BUILD_OUTCOME::success"
          else
            echo "Build failed!"
            echo "::set-output name=status::failure"
            echo "Current Stage: Build"
            echo "Build Outcome Timestamp: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
            echo "::set-output name=BUILD_OUTCOME::failure"
          fi

      - name: Check Build Outcome and Trigger HTTPie Command
        run: |
          if [[ "${{ steps.build.outcome }}" == "success" ]]; then
            echo "Build succeeded. Triggering success HTTPie command..."
            http --ignore-stdin POST https://db9c-2603-8080-6300-b84-bd0d-90fe-4799-511c.ngrok.io/events \
              check:=metadata:=name=check-pipeline-status \
              status:=0 \
              output="Successful build step"
          else
            echo "Build failed. Triggering failure HTTPie command..."
            http --ignore-stdin POST https://db9c-2603-8080-6300-b84-bd0d-90fe-4799-511c.ngrok.io/events \
              check:=metadata:=name=check-pipeline-status \
              status:=2 \
              output="Failed build step"
          fi
          sleep 5  # 5-second sleep

      - name: Test
        id: test
        run: |
          echo "Testing..."
          # Simulate a test process
          if [ $((RANDOM % 2)) -eq 0 ]; then
            echo "Tests passed!"
            echo "::set-output name=status::success"
            echo "Current Stage: Test"
            echo "Test Outcome Timestamp: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
            echo "::set-output name=TEST_OUTCOME::success"
          else
            echo "Tests failed!"
            echo "::set-output name=status::failure"
            echo "Current Stage: Test"
            echo "Test Outcome Timestamp: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
            echo "::set-output name=TEST_OUTCOME::failure"
          fi

      - name: Check Test Outcome and Trigger HTTPie Command
        run: |
          if [[ "${{ steps.test.outcome }}" == "success" ]]; then
            echo "Tests succeeded. Triggering success HTTPie command..."
            http --ignore-stdin POST https://db9c-2603-8080-6300-b84-bd0d-90fe-4799-511c.ngrok.io/events \
              check:=metadata:=name=check-pipeline-status \
              status:=0 \
              output="Successful test step"
          else
            echo "Tests failed. Triggering failure HTTPie command..."
            http --ignore-stdin POST https://db9c-2603-8080-6300-b84-bd0d-90fe-4799-511c.ngrok.io/events \
              check:=metadata:=name=check-pipeline-status \
              status:=2 \
              output="Failed test step"
          fi
          sleep 5  # 5-second sleep

      - name: Deploy
        id: deploy
        run: |
          echo "Deploying..."
          # Simulate a deploy process
          if [ $((RANDOM % 2)) -eq 0 ]; then
            echo "Deployment successful!"
            echo "::set-output name=status::success"
            echo "Current Stage: Deploy"
            echo "Deploy Outcome Timestamp: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
            echo "::set-output name=DEPLOY_OUTCOME::success"
          else
            echo "Deployment failed!"
            echo "::set-output name=status::failure"
            echo "Current Stage: Deploy"
            echo "Deploy Outcome Timestamp: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
            echo "::set-output name=DEPLOY_OUTCOME::failure"
          fi

      - name: Check Deploy Outcome and Trigger HTTPie Command
        run: |
          if [[ "${{ steps.deploy.outcome }}" == "success" ]]; then
            echo "Deployment succeeded. Triggering success HTTPie command..."
            http --ignore-stdin POST https://db9c-2603-8080-6300-b84-bd0d-90fe-4799-511c.ngrok.io/events \
              check:=metadata:=name=check-pipeline-status \
              status:=0 \
              output="Successful deploy step"
          else
            echo "Deployment failed. Triggering failure HTTPie command..."
            http --ignore-stdin POST https://db9c-2603-8080-6300-b84-bd0d-90fe-4799-511c.ngrok.io/events \
              check:=metadata:=name=check-pipeline-status \
              status:=2 \
              output="Failed deploy step"
          fi
          sleep 5  # 5-second sleep
